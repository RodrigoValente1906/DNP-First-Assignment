@page "/Login"
@using Contracts
@inject IAuthService authService
@inject NavigationManager navMgr

<AuthorizeView>
    <NotAuthorized>
        <body>
        <main>
            <div class="row">
                <div class="colm-form">
                    <div class="form-container">
                        <h3> Login </h3>
                        <input type="text" placeholder="Username" @bind="username">
                        <input type="password" placeholder="Password" @bind="password">

                        @if (!string.IsNullOrEmpty(errorLabel))
                        {
                            <div class="field">
                                <label style="color: red"></label>
                                @errorLabel
                            </div>
                        }

                        <button class="btn-login" @onclick="LoginAsync">Login</button>
                        <button class="btn-new" @onclick="RegisterAccountAsync">Register</button>
                    </div>
                </div>
            </div>
        </main>
        </body>
        
    </NotAuthorized>
    <Authorized>
        <div class="card">
            <h3>Hey, @context.User.Identity.Name</h3>
        </div>
    </Authorized>
</AuthorizeView>

@code {
  private string username;
  private string password;
  private string errorLabel;

  private async Task LoginAsync()
  {
    errorLabel = "";
    try
    {
      await authService.LoginAsync(username, password);
      errorLabel = $"Hey {username}";
    }
    catch (Exception e)
    {
      errorLabel = e.Message;
    }
  }

  private async Task RegisterAccountAsync()
  {
    navMgr.NavigateTo("/Register");
  }
}